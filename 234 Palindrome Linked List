public class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null) {
            return true;
        }
        ListNode fast = head;
        ListNode slow = head;
        while (fast.next.next != null && fast.next.next.next != null) {
            fast = fast.next.next;
            slow = slow.next;
        }
        ListNode head1 = null;
        if (fast.next.next == null) {
            head1 = slow.next;
            slow.next = null;
        } else {
            head1 = slow.next.next;
            slow.next = null;
        }
        ListNode head2 = reverse(head);
        while (head1 != null || head2 != null) {
            if (head1.val != head2.val) {
                return false;
            }
            head1 = head1.next;
            head2 = head2.next;
        }
        if (head1 == null && head2 == null) {
            return true;
        } else {
            return false;
        }
    }
    public ListNode reverse(ListNode node) {
        if (node == null || node.next == null) {
            return node;
        }
        ListNode newhead = reverse(node.next);
        node.next.next = node;
        node.next = null;
        return newhead;
    }
}
